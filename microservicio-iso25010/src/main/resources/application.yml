server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:/api}
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: microservicio-iso25010
  
  # Configuración HTTP y codificación
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
      force-request: true
      force-response: true
  
  # Configuración de base de datos H2
  datasource:
    url: ${DB_URL:jdbc:h2:mem:devdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MySQL;DATABASE_TO_LOWER=TRUE;INIT=CREATE DOMAIN IF NOT EXISTS TEXT AS VARCHAR(255)}
    driver-class-name: ${DB_DRIVER:org.h2.Driver}
    username: ${DB_USERNAME:dev_user}
    password: ${DB_PASSWORD:dev_secure_password_2025}
  
  # Configuración JPA/Hibernate
  jpa:
    database-platform: ${DB_PLATFORM:org.hibernate.dialect.H2Dialect}
    hibernate:
      ddl-auto: ${DB_DDL_AUTO:create-drop}
    show-sql: ${DB_SHOW_SQL:true}
    properties:
      hibernate:
        '[format_sql]': true
        connection:
          CharSet: utf8mb4
          characterEncoding: utf8
          useUnicode: true
        jdbc:
          lob:
            non_contextual_creation: true
        default_schema: PUBLIC
    defer-datasource-initialization: true
  
  # Configuración H2 Console
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED:true}
      path: ${H2_CONSOLE_PATH:/h2-console}
      settings:
        web-allow-others: ${H2_WEB_ALLOW_OTHERS:true}
  
  # Configuración de inicialización de datos
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
      continue-on-error: true
      encoding: UTF-8

# Configuración de logging
logging:
  level:
    '[com.ejemplo]': ${LOG_LEVEL_APP:DEBUG}
    '[org.springframework.web]': ${LOG_LEVEL_WEB:DEBUG}
    '[org.hibernate.SQL]': ${LOG_LEVEL_SQL:DEBUG}
    '[org.hibernate.type.descriptor.sql.BasicBinder]': ${LOG_LEVEL_HIBERNATE:TRACE}
    root: ${LOG_LEVEL_ROOT:INFO}

# Configuración de SpringDoc OpenAPI
springdoc:
  api-docs:
    path: ${SWAGGER_API_DOCS_PATH:/api-docs}
    enabled: ${SWAGGER_ENABLED:true}
  swagger-ui:
    path: ${SWAGGER_UI_PATH:/swagger-ui.html}
    enabled: ${SWAGGER_UI_ENABLED:true}

# Configuración de gestión y monitoreo (Spring Boot Actuator)
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info,metrics}
  endpoint:
    health:
      show-details: ${ACTUATOR_HEALTH_DETAILS:when-authorized}

# Configuración personalizada de CORS
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:4200,http://localhost:8080,http://127.0.0.1:3000,http://127.0.0.1:4200,http://127.0.0.1:8080}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,PATCH,DELETE,OPTIONS}
  allowed-headers: ${CORS_ALLOWED_HEADERS:Content-Type,Authorization,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers}
  exposed-headers: ${CORS_EXPOSED_HEADERS:Access-Control-Allow-Origin,Access-Control-Allow-Credentials,Location,X-Total-Count}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  max-age: ${CORS_MAX_AGE:3600}

# Configuración JWT
jwt:
  secret: ${JWT_SECRET:bXljb21wbGV4c2VjcmV0a2V5Zm9yand0dG9rZW5zaWdudGluZ21pY3Jvc2VydmljaW9pc28yNTAxMHByb3llY3R1bmd2bWFyaWFub2dhbHZleg==}
  expiration: ${JWT_EXPIRATION:86400000}
  refresh-token:
    expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:604800000}